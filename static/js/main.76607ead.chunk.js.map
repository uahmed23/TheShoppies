{"version":3,"sources":["Context.js","components/Header.js","components/NominatedMovies.js","pages/Nominations.js","components/Poster.js","pages/Movies.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","nominations","setNominations","movies","setMovies","totalResults","setTotalResults","searchString","setSearchString","query","pageNum","a","axios","get","data","result","Search","totalMovies","useEffect","ls","set","savedNominations","Provider","value","addToNominations","newItem","updatedNominations","prevItems","removeFromNominations","id","filter","item","imdbID","fetchMovies","Header","nominatedClassName","useContext","length","to","className","NominatedMovies","movie","hovered","setHovered","iconClassName","onClick","onMouseEnter","onMouseLeave","Title","Year","alt","src","Poster","Nominations","nominatedMovies","map","some","Movies","page","setPage","header","document","getElementById","sticky","offsetTop","scrollCallBack","window","addEventListener","pageYOffset","classList","add","remove","removeEventListener","delayedQuery","useCallback","_","debounce","q","moviePosters","i","console","log","Math","floor","href","prevState","label","placeholder","onChange","e","target","style","height","width","textAlign","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.76607ead.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport axios from 'axios'\nimport ls from 'local-storage'\n\n\n\nconst Context = React.createContext()\n\nfunction ContextProvider({ children }) {\n\n    const [nominations, setNominations] = useState([])\n    const [movies, setMovies] = useState([])\n    const [totalResults, setTotalResults] = useState(0)\n    const [searchString, setSearchString] = useState('')\n\n    useEffect(() => {\n        if (!ls.get('nominations'))\n            ls.set('nominations', []);\n        let savedNominations = ls.get('nominations');\n        setNominations(savedNominations);\n    }, [])\n\n    async function fetchMovies(query, pageNum) {\n        let data = await axios.get(`http://www.omdbapi.com/?apikey=5209986e&s=${query}&page=${pageNum}&type=movie`)\n        let result = data.data.Search ? data.data.Search : []\n        let totalMovies = data.data.totalResults ? data.data.totalResults : 0\n        setTotalResults(totalMovies)\n        setMovies(result)\n    }\n\n    function addToNominations(newItem) {\n        let updatedNominations = [...nominations, newItem]\n        ls.set('nominations', updatedNominations)\n        setNominations(prevItems => [...prevItems, newItem])\n    }\n\n    function removeFromNominations(id) {\n        let updatedNominations = nominations.filter(item => item.imdbID !== id)\n        ls.set('nominations', updatedNominations)\n        setNominations(prevItems => prevItems.filter(item => item.imdbID !== id))\n    }\n\n    return (\n        <Context.Provider value={{\n            nominations,\n            addToNominations,\n            removeFromNominations,\n            movies,\n            totalResults,\n            fetchMovies,\n            searchString,\n            setSearchString\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport { ContextProvider, Context }","import React, { useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { Context } from \"../Context\"\n\nfunction Header() {\n    const { nominations } = useContext(Context)\n    const nominatedClassName = nominations.length > 0 ? \"ri-star-fill\" : \"ri-star-line\"\n    return (\n        <>\n            <header>\n                <Link to=\"/\"><h2>The Shoppies</h2></Link>\n                <Link to=\"/nominations\">\n                    <div className=\"star-page\">\n                        <h3>My Nominations</h3><i className={`${nominatedClassName} header-star ri-fw ri-2x`}></i>\n                    </div>\n                </Link>\n            </header>\n        </>\n    )\n}\n\nexport default Header\n","import React, { useState, useContext } from \"react\"\nimport { Context } from \"../Context\"\n\nfunction NominatedMovies({ movie }) {\n    const [hovered, setHovered] = useState(false)\n    const { removeFromNominations } = useContext(Context)\n\n    const iconClassName = hovered ? \"ri-delete-bin-fill remove\" : \"ri-delete-bin-line remove\"\n\n    return (\n        <main className=\"nominees\">\n\n            <div\n                className={`small image-container`}\n            >\n                <i\n                    className={iconClassName}\n                    onClick={() => removeFromNominations(movie.imdbID)}\n                    onMouseEnter={() => setHovered(true)}\n                    onMouseLeave={() => setHovered(false)}\n                >\n                </i>\n                <h5> {`${movie.Title} ( ${movie.Year} )`}</h5>\n                <img alt={`${movie.Title} ( ${movie.Year} )`} src={movie.Poster} className=\"nominee-img-grid\" />\n            </div>\n        </main>\n    )\n}\n\nexport default NominatedMovies","import React, { useState, useContext } from \"react\"\nimport { Context } from \"../Context\"\nimport NominatedMovies from \"../components/NominatedMovies\"\n\nfunction Nominations() {\n    const { nominations } = useContext(Context)\n\n    const nominatedMovies = nominations.map(movie => (\n        <NominatedMovies key={movie.imdbID} movie={movie} />\n    ))\n\n    return (\n        <main className=\"nominee-page\">\n            <div className=\"nomination-page-title\">\n                <h1>Nomination List</h1>\n            </div>\n            {nominations ? nominatedMovies : null}\n            {\n                nominations.length > 0 ? null : <p>You have not nominated any movies yet.</p>\n            }\n        </main>\n    )\n}\n\nexport default Nominations","import React, { useState, useContext } from \"react\"\n\nimport { Context } from \"../Context\"\n\nfunction Poster({ movie }) {\n    const [hovered, setHovered] = useState(false)\n    const { addToNominations, nominations, removeFromNominations } = useContext(Context)\n\n\n    function starIcon() {\n        const alreadyNominated = nominations.some(item => item.imdbID === movie.imdbID)\n\n        if (alreadyNominated) {\n            return <i className=\"ri-star-fill star\" onClick={() => removeFromNominations(movie.imdbID)}></i>\n        } else if (hovered && nominations.length < 5) {\n            return <i className=\"ri-star-line star\" onClick={() => addToNominations(movie)}></i>\n        }\n        else if (hovered && nominations.length > 4) {\n            return <i className=\"ri-alert-fill full\"></i>\n        }\n    }\n\n    return (\n        <div\n            className={`big image-container`}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n        >\n            <h5>{`${movie.Title} ( ${movie.Year} )`}</h5>\n            <img alt={`${movie.Title} ( ${movie.Year} )`} src={movie.Poster} className=\"image-grid\" />\n\n            {starIcon()}\n        </div>\n    )\n}\n\nexport default Poster\n","import React, { useContext, useState, useCallback, useEffect } from \"react\"\nimport Poster from \"../components/Poster\"\nimport { Context } from \"../Context\"\nimport _ from \"lodash\";\n\nfunction Movies() {\n    const { movies, fetchMovies, totalResults, nominations, searchString, setSearchString } = useContext(Context)\n    const [page, setPage] = useState(1);\n    const headerText = \"5 movie nomination limit reached\";\n    useEffect(() => {\n        const header = document.getElementById(\"limitbanner\");\n        const line = document.getElementById(\"bannerline\");\n\n        const sticky = line.offsetTop;\n        const scrollCallBack = window.addEventListener(\"scroll\", () => {\n            if (nominations.length > 4) {\n                if (window.pageYOffset > sticky) {\n                    header.classList.add(\"sticky\");\n                    header.classList.remove(\"invisible\");\n\n                } else {\n                    header.classList.add(\"invisible\");\n                }\n            }\n            else {\n                header.classList.add(\"invisible\");\n            }\n        });\n        return () => {\n            window.removeEventListener(\"scroll\", scrollCallBack);\n        };\n    }, [nominations]);\n\n    const delayedQuery = useCallback(_.debounce(q => fetchMovies(q, page), 500), []);\n\n    const handleChange = e => {\n        setPage(1);\n        setSearchString(e.target.value)\n        delayedQuery(e.target.value)\n    }\n\n    const moviePosters = movies.map((movie, i) => (\n        <Poster key={i} movie={movie} />\n    ))\n\n    const nextPage = () => {\n        if (page < Math.floor(totalResults / 10) + 1) {\n            fetchMovies(searchString, page + 1)\n            setPage(prevState => prevState + 1)\n        }\n\n    }\n    const previousPage = () => {\n        if (page > 1) {\n            fetchMovies(searchString, page - 1)\n            setPage(prevState => prevState - 1)\n        }\n    }\n    console.log(movies);\n    return (\n        <>\n            <div className=\"pageInfo\">\n                <p>page {page} out of {Math.floor(totalResults / 10) + 1}</p>\n                <a href='#' onClick={previousPage} className=\"previous\">&#8249;</a>\n                <a href='#' onClick={nextPage} className=\"next\">&#8250;</a>\n            </div>\n            <div className=\"search-container\">\n                <input\n                    label=\"Movie Title...\"\n                    value={searchString}\n                    placeholder=\"Search movie title...\"\n                    onChange={handleChange}\n                />\n                <div className=\"message\" style={{ height: \"40px\", width: \"95%\", textAlign: \"center\" }} >\n                    {movies && movies.length > 0 && nominations && nominations.length < 5 ? <h4>Click <i className=\"ri-star-line banner-star\"></i> on a poster to nominate a movie</h4> : null}\n                    {nominations && nominations.length > 4 ? <h4><i className=\"ri-alert-line banner-full\"></i> nomination limit reached (5 nominees max.)</h4> : null}\n                </div>\n            </div>\n            <div id=\"bannerline\"></div>\n            <header id=\"limitbanner\" className=\"banner invisible\">\n                {headerText}\n            </header>\n            <main className=\"movies\">\n                {!movies || movies.length < 1 ? <h3>   No matching movie title found</h3> : moviePosters}\n            </main>\n        </>\n    )\n}\n\nexport default Movies","import React from \"react\"\nimport './styles.css'\nimport { Switch, Route } from \"react-router-dom\"\n\nimport Header from \"./components/Header\"\nimport Nominations from \"./pages/Nominations\"\n// import Photos from \"./pages/Movies\"\nimport Movies from \"./pages/Movies\"\n\nfunction App() {\n    return (\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Movies />\n                </Route>\n\n                <Route path=\"/nominations\">\n                    <Nominations />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { HashRouter as Router } from \"react-router-dom\"\n\nimport { ContextProvider } from \"./Context\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <ContextProvider>\n        <Router>\n            <App />\n        </Router>\n    </ContextProvider>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}